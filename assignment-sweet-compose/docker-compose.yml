# compose versions are no longer needed for Compose CLI

services:
  traefik:
    image: traefik:1.7-alpine
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
    command:
      - --docker
      - --docker.domain=traefik
      - --docker.watch
      - --api
      - --defaultentrypoints=http,https
    labels:
      - traefik.port=8080
      - traefik.frontend.rule=Host:traefik.localhost,traefik.vcap.me
    networks:
      - frontend
      - backend

  redis:
    image: redis:alpine
    networks:
      - frontend
    healthcheck:
      test: redis-cli ping

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1

  vote:
    image: bretfisher/examplevotingapp_vote
    labels:
      - traefik.port=80
      - traefik.frontend.rule=Host:vote.localhost,vote.vcap.me
    networks:
      - frontend
    depends_on:
      redis:
        condition: service_healthy

  result:
    build: 
      context: result
    command: nodemon --inspect=0.0.0.0:9229 server.js
    labels:
      - traefik.port=80
      - traefik.frontend.rule=Host:result.localhost,result.vcap.me
    ports:
      - "5858:9229"
    volumes:
      - ./result:/app
    networks:
      - backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NODE_ENV=development

  worker:
    image: bretfisher/examplevotingapp_worker
    networks:
      - frontend
      - backend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

networks:
  frontend:
  backend:

volumes:
  db-data:
